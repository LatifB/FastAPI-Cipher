from collections import deque
import string


class Enigma:
    '''
    Replica of Enigma machine used in WW2. Made it since previous cipher wasn't complicated enough.
    It is not suitable for this application since it has to be in the correct settings to successfully
    cipher and decipher the given string. It supports the same characters as previous one. There is 10 
    different rotors and, 20 plugboard to choose from. It uses 3 rotors but can be altered with ease
    with some additional lines of code. Also, starting format of the rotors can be adjusted with
    passing parameter, however, it does not work with values other than default ones for now.
    '''

    class __Rotor:
        '''
        Inner class that is being used for creating the rotors. It takes pairs and offset as parameters.
        Pairs is a map to connect letters to a different letter. Offset has a default value of 0. It has
        a bug that fails with different values than zero.
        '''

        def __init__(self, pair, offset=0):
            alphabet = string.ascii_letters + '''0 123/45\t6\n789.,?!:"';'''
            self.__alphabet = deque(alphabet)
            self.__alphabet.rotate(offset)
            self.__forward_pair = pair[0]
            self.__backward_pair = pair[1]
            self.__offset = offset

        def forward(self, char_index, rotate=0):
            '''
            Returns index of a ciphered character and indicator of full cyle. If full cyle has been reached.
            full_cyle set to 1. Therefore next rotar can rotate once.
            '''
            self.__alphabet.rotate(rotate)
            char = self.__alphabet[char_index]
            ciphered_char = self.__forward_pair[char]
            ciphered_index = self.__alphabet.index(ciphered_char)
            full_scyle = 1 if self.__offset % len(self.__alphabet) == 0 else 0
            return ciphered_index, full_scyle

        def backward(self, char_index, rotate=0):
            '''
            Returns index of a deciphered character and indicator of full cyle. If full cyle has been reached.
            full_cyle set to 1. Therefore next rotar can rotate once.
            '''
            self.__alphabet.rotate(rotate)
            char = self.__alphabet[char_index]
            ciphered_char = self.__backward_pair[char]
            ciphered_index = self.__alphabet.index(ciphered_char)
            full_scyle = 1 if self.__offset % len(self.__alphabet) == 0 else 0
            return ciphered_index, full_scyle

    def __init__(self, rotors=[0,1,2], plugboards=[4,7], offsets=[0,0,0]):
        self.alphabet = string.ascii_letters + '''0 123/45\t6\n789.,?!:"';'''
        self.__rotors = [
            [{'a': 'j', 'b': 'n', 'c': 'X', 'd': '9', 'e': 'Q', 'f': 'p', 'g': 'N', 'h': 'h', 'i': '.', 'j': 'B', 'k': 'R', 'l': '\n', 'm': 'M', 'n': 'W', 'o': 'J', 'p': 'i', 'q': 'T', 'r': 'U', 's': '0', 't': 'v', 'u': 'Z', 'v': 'q', 'w': 'H', 'x': 'V', 'y': 'r', 'z': '8', 'A': 'z', 'B': 'u', 'C': '4', 'D': 'I', 'E': 'o', 'F': 'O', 'G': 'c', 'H': '\t', 'I': '6', 'J': '"', 'K': '2', 'L': 'f', 'M': ':', 'N': 'S', 'O': '!', 'P': 'g', 'Q': ';', 'R': 'm', 'S': 'e', 'T': 'L', 'U': 'l', 'V': "'", 'W': 'a', 'X': 'D', 'Y': ',', 'Z': 'b', '0': 'F', ' ': 'Y', '1': 'w', '2': 'K', '3': '/', '/': 'C', '4': 'G', '5': '1', '\t': 'x', '6': ' ', '\n': 't', '7': '?', '8': 'E', '9': '3', '.': 's', ',': 'k', '?': 'd', '!': 'y', ':': 'P', '"': '7', "'": '5', ';': 'A'}, {'j': 'a', 'n': 'b', 'X': 'c', '9': 'd', 'Q': 'e', 'p': 'f', 'N': 'g', 'h': 'h', '.': 'i', 'B': 'j', 'R': 'k', '\n': 'l', 'M': 'm', 'W': 'n', 'J': 'o', 'i': 'p', 'T': 'q', 'U': 'r', '0': 's', 'v': 't', 'Z': 'u', 'q': 'v', 'H': 'w', 'V': 'x', 'r': 'y', '8': 'z', 'z': 'A', 'u': 'B', '4': 'C', 'I': 'D', 'o': 'E', 'O': 'F', 'c': 'G', '\t': 'H', '6': 'I', '"': 'J', '2': 'K', 'f': 'L', ':': 'M', 'S': 'N', '!': 'O', 'g': 'P', ';': 'Q', 'm': 'R', 'e': 'S', 'L': 'T', 'l': 'U', "'": 'V', 'a': 'W', 'D': 'X', ',': 'Y', 'b': 'Z', 'F': '0', 'Y': ' ', 'w': '1', 'K': '2', '/': '3', 'C': '/', 'G': '4', '1': '5', 'x': '\t', ' ': '6', 't': '\n', '?': '7', 'E': '8', '3': '9', 's': '.', 'k': ',', 'd': '?', 'y': '!', 'P': ':', '7': '"', '5': "'", 'A': ';'}],
            [{'a': 'J', 'b': 'a', 'c': '"', 'd': 'p', 'e': 'F', 'f': '5', 'g': 'v', 'h': '.', 'i': 'x', 'j': ';', 'k': 'z', 'l': f'4', 'm': 'R', 'n': '6', 'o': 's', 'p': 'Y', 'q': "'", 'r': 'u', 's': 'm', 't': '!', 'u': 'e', 'v': '\t', 'w': 'y', 'x': 'j', 'y': 'I', 'z': ',', 'A': '1', 'B': 'Q', 'C': 'X', 'D': 't', 'E': 'r', 'F': 'g', 'G': 'd', 'H': 'E', 'I': 'k', 'J': 'K', 'K': 'A', 'L': '0', 'M': 'D', 'N': 'U', 'O': 'M', 'P': 'o', 'Q': 'W', 'R': ':', 'S': '2', 'T': 'P', 'U': '8', 'V': '3', 'W': 'H', 'X': 'C', 'Y': 'N', 'Z': '7', '0': 'q', ' ': 'n', '1': '/', '2': 'S', '3': 'G', '/': 'f', '4': 'V', '5': '9', '\t': 'L', '6': 'Z', '\n': 'h', '7': 'c', '8': '\n', '9': 'l', '.': 'b', ',': ' ', '?': 'O', '!': '?', ':': 'B', '"': 'w', "'": 'T', ';': 'i'}, {'J': 'a', 'a': 'b', '"': 'c', 'p': 'd', 'F': 'e', '5': 'f', 'v': 'g', '.': 'h', 'x': 'i', ';': 'j', 'z': 'k', '4': 'l', 'R': 'm', '6': 'n', 's': 'o', 'Y': 'p', "'": 'q', 'u': 'r', 'm': 's', '!': 't', 'e': 'u', '\t': 'v', 'y': 'w', 'j': 'x', 'I': 'y', ',': 'z', '1': 'A', 'Q': 'B', 'X': 'C', 't': 'D', 'r': 'E', 'g': 'F', 'd': 'G', 'E': 'H', 'k': 'I', 'K': 'J', 'A': 'K', '0': 'L', 'D': 'M', 'U': 'N', 'M': 'O', 'o': 'P', 'W': 'Q', ':': 'R', '2': 'S', 'P': 'T', '8': 'U', '3': 'V', 'H': 'W', 'C': 'X', 'N': 'Y', '7': 'Z', 'q': '0', 'n': ' ', '/': '1', 'S': '2', 'G': '3', 'f': '/', 'V': '4', '9': '5', 'L': '\t', 'Z': '6', 'h': '\n', 'c': '7', '\n': '8', 'l': '9', 'b': '.', ' ': ',', 'O': '?', '?': '!', 'B': ':', 'w': '"', 'T': "'", 'i': ';'}],
            [{'a': 'c', 'b': 'r', 'c': '/', 'd': 'E', 'e': 'D', 'f': 'L', 'g': '\n', 'h': '3', 'i': '.', 'j': 'C', 'k': 'R', 'l': 't', 'm': 'Q', 'n': 'b', 'o': 'v', 'p': 'W', 'q': '6', 'r': 'X', 's': 'S', 't': 'i', 'u': '"', 'v': 'A', 'w': '5', 'x': ';', 'y': '9', 'z': 'U', 'A': '!', 'B': '?', 'C': 'o', 'D': 'w', 'E': 'T', 'F': '\t', 'G': 'N', 'H': '0', 'I': 'V', 'J': 'M', 'K': ' ', 'L': 'Y', 'M': 'O', 'N': 'u', 'O': 'H', 'P': '4', 'Q': ',', 'R': 'a', 'S': 'J', 'T': 'f', 'U': 'm', 'V': 'j', 'W': 'l', 'X': 'I', 'Y': 'k', 'Z': 'n', '0': 'F', ' ': 'K', '1': '1', '2': 'q', '3': 'y', '/': 'g', '4': '7', '5': 'x', '\t': ':', '6': 'G', '\n': 'e', '7': '8', '8': '2', '9': "'", '.': 'z', ',': 'B', '?': 'd', '!': 'p', ':': 'h', '"': 'Z', "'": 's', ';': 'P'}, {'c': 'a', 'r': 'b', '/': 'c', 'E': 'd', 'D': 'e', 'L': 'f', '\n': 'g', '3': 'h', '.': 'i', 'C': 'j', 'R': 'k', 't': 'l', 'Q': 'm', 'b': 'n', 'v': 'o', 'W': 'p', '6': 'q', 'X': 'r', 'S': 's', 'i': 't', '"': 'u', 'A': 'v', '5': 'w', ';': 'x', '9': 'y', 'U': 'z', '!': 'A', '?': 'B', 'o': 'C', 'w': 'D', 'T': 'E', '\t': 'F', 'N': 'G', '0': 'H', 'V': 'I', 'M': 'J', ' ': 'K', 'Y': 'L', 'O': 'M', 'u': 'N', 'H': 'O', '4': 'P', ',': 'Q', 'a': 'R', 'J': 'S', 'f': 'T', 'm': 'U', 'j': 'V', 'l': 'W', 'I': 'X', 'k': 'Y', 'n': 'Z', 'F': '0', 'K': ' ', '1': '1', 'q': '2', 'y': '3', 'g': '/', '7': '4', 'x': '5', ':': '\t', 'G': '6', 'e': '\n', '8': '7', '2': '8', "'": '9', 'z': '.', 'B': ',', 'd': '?', 'p': '!', 'h': ':', 'Z': '"', 's': "'", 'P': ';'}],
            [{'a': 'q', 'b': 'f', 'c': 'B', 'd': '1', 'e': 'c', 'f': 'p', 'g': 'J', 'h': 'a', 'i': ';', 'j': 'F', 'k': '9', 'l': "'", 'm': '4', 'n': '8', 'o': 'Z', 'p': 't', 'q': '"', 'r': 'z', 's': '.', 't': 'U', 'u': 'K', 'v': '\n', 'w': '7', 'x': 'Q', 'y': 'P', 'z': 'I', 'A': 'v', 'B': 'G', 'C': 'D', 'D': '?', 'E': '!', 'F': '6', 'G': 'b', 'H': 'n', 'I': 'H', 'J': 'h', 'K': 'd', 'L': 'y', 'M': ':', 'N': '3', 'O': '\t', 'P': 'm', 'Q': 'W', 'R': 'w', 'S': 'T', 'T': 'R', 'U': 'e', 'V': 'Y', 'W': 'l', 'X': 'L', 'Y': '2', 'Z': 'j', '0': 'M', ' ': 'A', '1': 'u', '2': 'i', '3': 'S', '/': '5', '4': 'o', '5': 'g', '\t': '/', '6': ',', '\n': 'E', '7': 'C', '8': 'X', '9': 's', '.': 'k', ',': 'r', '?': '0', '!': 'x', ':': 'O', '"': 'N', "'": 'V', ';': ' '}, {'q': 'a', 'f': 'b', 'B': 'c', '1': 'd', 'c': 'e', 'p': 'f', 'J': 'g', 'a': 'h', ';': 'i', 'F': 'j', '9': 'k', "'": 'l', '4': 'm', '8': 'n', 'Z': 'o', 't': 'p', '"': 'q', 'z': 'r', '.': 's', 'U': 't', 'K': 'u', '\n': 'v', '7': 'w', 'Q': 'x', 'P': 'y', 'I': 'z', 'v': 'A', 'G': 'B', 'D': 'C', '?': 'D', '!': 'E', '6': 'F', 'b': 'G', 'n': 'H', 'H': 'I', 'h': 'J', 'd': 'K', 'y': 'L', ':': 'M', '3': 'N', '\t': 'O', 'm': 'P', 'W': 'Q', 'w': 'R', 'T': 'S', 'R': 'T', 'e': 'U', 'Y': 'V', 'l': 'W', 'L': 'X', '2': 'Y', 'j': 'Z', 'M': '0', 'A': ' ', 'u': '1', 'i': '2', 'S': '3', '5': '/', 'o': '4', 'g': '5', '/': '\t', ',': '6', 'E': '\n', 'C': '7', 'X': '8', 's': '9', 'k': '.', 'r': ',', '0': '?', 'x': '!', 'O': ':', 'N': '"', 'V': "'", ' ': ';'}],
            [{'a': '"', 'b': 'F', 'c': '/', 'd': "'", 'e': 'v', 'f': ' ', 'g': 'C', 'h': 'I', 'i': 'B', 'j': 'J', 'k': '6', 'l': ',', 'm': 'b', 'n': 't', 'o': '4', 'p': 'W', 'q': 'y', 'r': 'K', 's': '2', 't': 'P', 'u': '\t', 'v': '!', 'w': 'l', 'x': 'Z', 'y': 'M', 'z': 'n', 'A': 'O', 'B': 'A', 'C': '5', 'D': 'd', 'E': 'o', 'F': '?', 'G': '1', 'H': '8', 'I': 'w', 'J': 'N', 'K': 'L', 'L': 'q', 'M': 'g', 'N': 'u', 'O': ':', 'P': 'm', 'Q': 'Q', 'R': '3', 'S': '.', 'T': 'U', 'U': 'p', 'V': 's', 'W': '\n', 'X': 'H', 'Y': 'c', 'Z': '9', '0': 'h', ' ': 'T', '1': 'x', '2': 'f', '3': 'X', '/': 'j', '4': 'k', '5': 'S', '\t': 'z', '6': 'Y', '\n': '0', '7': 'G', '8': 'a', '9': 'E', '.': 'e', ',': '7', '?': 'i', '!': 'R', ':': 'D', '"': ';', "'": 'r', ';': 'V'}, {'"': 'a', 'F': 'b', '/': 'c', "'": 'd', 'v': 'e', ' ': 'f', 'C': 'g', 'I': 'h', 'B': 'i', 'J': 'j', '6': 'k', ',': 'l', 'b': 'm', 't': 'n', '4': 'o', 'W': 'p', 'y': 'q', 'K': 'r', '2': 's', 'P': 't', '\t': 'u', '!': 'v', 'l': 'w', 'Z': 'x', 'M': 'y', 'n': 'z', 'O': 'A', 'A': 'B', '5': 'C', 'd': 'D', 'o': 'E', '?': 'F', '1': 'G', '8': 'H', 'w': 'I', 'N': 'J', 'L': 'K', 'q': 'L', 'g': 'M', 'u': 'N', ':': 'O', 'm': 'P', 'Q': 'Q', '3': 'R', '.': 'S', 'U': 'T', 'p': 'U', 's': 'V', '\n': 'W', 'H': 'X', 'c': 'Y', '9': 'Z', 'h': '0', 'T': ' ', 'x': '1', 'f': '2', 'X': '3', 'j': '/', 'k': '4', 'S': '5', 'z': '\t', 'Y': '6', '0': '\n', 'G': '7', 'a': '8', 'E': '9', 'e': '.', '7': ',', 'i': '?', 'R': '!', 'D': ':', ';': '"', 'r': "'", 'V': ';'}],
            [{'a': ' ', 'b': '4', 'c': 's', 'd': 'x', 'e': '0', 'f': 'E', 'g': ',', 'h': 'O', 'i': 'n', 'j': '/', 'k': 't', 'l': 'T', 'm': 'e', 'n': '.', 'o': 'y', 'p': 'D', 'q': 'o', 'r': '\t', 's': 'C', 't': '!', 'u': 'X', 'v': 'R', 'w': 'Q', 'x': 'g', 'y': 'r', 'z': 'w', 'A': '5', 'B': 'F', 'C': ';', 'D': 'G', 'E': 'c', 'F': 'z', 'G': 'v', 'H': 'f', 'I': 'U', 'J': 'h', 'K': 'd', 'L': '3', 'M': 'Z', 'N': 'V', 'O': 'K', 'P': '7', 'Q': 'N', 'R': 'q', 'S': 'i', 'T': 'b', 'U': 'M', 'V': 'J', 'W': 'B', 'X': 'Y', 'Y': 'k', 'Z': 'm', '0': 'S', ' ': 'p', '1': ':', '2': 'j', '3': 'P', '/': '6', '4': 'a', '5': 'I', '\t': '9', '6': 'L', '\n': 'A', '7': '\n', '8': '1', '9': '?', '.': 'W', ',': '8', '?': '"', '!': 'l', ':': 'u', '"': '2', "'": "'", ';': 'H'}, {' ': 'a', '4': 'b', 's': 'c', 'x': 'd', '0': 'e', 'E': 'f', ',': 'g', 'O': 'h', 'n': 'i', '/': 'j', 't': 'k', 'T': 'l', 'e': 'm', '.': 'n', 'y': 'o', 'D': 'p', 'o': 'q', '\t': 'r', 'C': 's', '!': 't', 'X': 'u', 'R': 'v', 'Q': 'w', 'g': 'x', 'r': 'y', 'w': 'z', '5': 'A', 'F': 'B', ';': 'C', 'G': 'D', 'c': 'E', 'z': 'F', 'v': 'G', 'f': 'H', 'U': 'I', 'h': 'J', 'd': 'K', '3': 'L', 'Z': 'M', 'V': 'N', 'K': 'O', '7': 'P', 'N': 'Q', 'q': 'R', 'i': 'S', 'b': 'T', 'M': 'U', 'J': 'V', 'B': 'W', 'Y': 'X', 'k': 'Y', 'm': 'Z', 'S': '0', 'p': ' ', ':': '1', 'j': '2', 'P': '3', '6': '/', 'a': '4', 'I': '5', '9': '\t', 'L': '6', 'A': '\n', '\n': '7', '1': '8', '?': '9', 'W': '.', '8': ',', '"': '?', 'l': '!', 'u': ':', '2': '"', "'": "'", 'H': ';'}],
            [{'a': 'x', 'b': 'l', 'c': 'z', 'd': 'u', 'e': 'k', 'f': 'W', 'g': 'h', 'h': 'L', 'i': 'V', 'j': 'w', 'k': 'f', 'l': ':', 'm': '0', 'n': 't', 'o': 'I', 'p': 'C', 'q': 'A', 'r': 'r', 's': 'i', 't': 'o', 'u': '?', 'v': 'Z', 'w': '8', 'x': 'y', 'y': 'G', 'z': 'Y', 'A': 'd', 'B': 'b', 'C': ';', 'D': 's', 'E': 'j', 'F': '/', 'G': '4', 'H': '7', 'I': '3', 'J': ',', 'K': '5', 'L': 'R', 'M': '\t', 'N': 'P', 'O': 'Q', 'P': 'T', 'Q': '1', 'R': '!', 'S': 'p', 'T': 'B', 'U': 'g', 'V': 'a', 'W': 'S', 'X': 'v', 'Y': '2', 'Z': '"', '0': '\n', ' ': 'n', '1': '6', '2': 'e', '3': ' ', '/': 'c', '4': 'D', '5': 'O', '\t': 'M', '6': 'H', '\n': 'U', '7': '9', '8': '.', '9': 'J', '.': 'K', ',': 'm', '?': 'E', '!': 'F', ':': 'X', '"': "'", "'": 'q', ';': 'N'}, {'x': 'a', 'l': 'b', 'z': 'c', 'u': 'd', 'k': 'e', 'W': 'f', 'h': 'g', 'L': 'h', 'V': 'i', 'w': 'j', 'f': 'k', ':': 'l', '0': 'm', 't': 'n', 'I': 'o', 'C': 'p', 'A': 'q', 'r': 'r', 'i': 's', 'o': 't', '?': 'u', 'Z': 'v', '8': 'w', 'y': 'x', 'G': 'y', 'Y': 'z', 'd': 'A', 'b': 'B', ';': 'C', 's': 'D', 'j': 'E', '/': 'F', '4': 'G', '7': 'H', '3': 'I', ',': 'J', '5': 'K', 'R': 'L', '\t': 'M', 'P': 'N', 'Q': 'O', 'T': 'P', '1': 'Q', '!': 'R', 'p': 'S', 'B': 'T', 'g': 'U', 'a': 'V', 'S': 'W', 'v': 'X', '2': 'Y', '"': 'Z', '\n': '0', 'n': ' ', '6': '1', 'e': '2', ' ': '3', 'c': '/', 'D': '4', 'O': '5', 'M': '\t', 'H': '6', 'U': '\n', '9': '7', '.': '8', 'J': '9', 'K': '.', 'm': ',', 'E': '?', 'F': '!', 'X': ':', "'": '"', 'q': "'", 'N': ';'}],
            [{'a': '.', 'b': 'M', 'c': 'X', 'd': 'g', 'e': 'C', 'f': '!', 'g': ' ', 'h': 'O', 'i': 'k', 'j': 'P', 'k': 'A', 'l': 'G', 'm': 'e', 'n': 'S', 'o': 'R', 'p': 'W', 'q': 'f', 'r': 's', 's': 'V', 't': '7', 'u': 'T', 'v': 'z', 'w': 'v', 'x': 'r', 'y': '0', 'z': 't', 'A': '?', 'B': 'b', 'C': '/', 'D': '"', 'E': 'a', 'F': 'q', 'G': '9', 'H': 'n', 'I': 'L', 'J': 'Y', 'K': '2', 'L': 'E', 'M': "'", 'N': 'd', 'O': 'Z', 'P': '8', 'Q': ',', 'R': 'u', 'S': 'H', 'T': 'c', 'U': '3', 'V': 'F', 'W': 'N', 'X': 'h', 'Y': 'D', 'Z': 'i', '0': 'B', ' ': 'U', '1': 'y', '2': ';', '3': 'w', '/': 'j', '4': 'Q', '5': '6', '\t': '\n', '6': '1', '\n': '5', '7': ':', '8': 'J', '9': 'm', '.': 'x', ',': 'o', '?': 'p', '!': 'I', ':': 'l', '"': '\t', "'": '4', ';': 'K'}, {'.': 'a', 'M': 'b', 'X': 'c', 'g': 'd', 'C': 'e', '!': 'f', ' ': 'g', 'O': 'h', 'k': 'i', 'P': 'j', 'A': 'k', 'G': 'l', 'e': 'm', 'S': 'n', 'R': 'o', 'W': 'p', 'f': 'q', 's': 'r', 'V': 's', '7': 't', 'T': 'u', 'z': 'v', 'v': 'w', 'r': 'x', '0': 'y', 't': 'z', '?': 'A', 'b': 'B', '/': 'C', '"': 'D', 'a': 'E', 'q': 'F', '9': 'G', 'n': 'H', 'L': 'I', 'Y': 'J', '2': 'K', 'E': 'L', "'": 'M', 'd': 'N', 'Z': 'O', '8': 'P', ',': 'Q', 'u': 'R', 'H': 'S', 'c': 'T', '3': 'U', 'F': 'V', 'N': 'W', 'h': 'X', 'D': 'Y', 'i': 'Z', 'B': '0', 'U': ' ', 'y': '1', ';': '2', 'w': '3', 'j': '/', 'Q': '4', '6': '5', '\n': '\t', '1': '6', '5': '\n', ':': '7', 'J': '8', 'm': '9', 'x': '.', 'o': ',', 'p': '?', 'I': '!', 'l': ':', '\t': '"', '4': "'", 'K': ';'}],
            [{'a': 'A', 'b': 'Q', 'c': 'Y', 'd': '1', 'e': 'j', 'f': '8', 'g': 'h', 'h': 'J', 'i': '!', 'j': 'l', 'k': ';', 'l': 'r', 'm': 'L', 'n': 'U', 'o': 'V', 'p': '0', 'q': 'F', 'r': '?', 's': 's', 't': 'C', 'u': 'R', 'v': 'W', 'w': "'", 'x': 'f', 'y': '\n', 'z': 'B', 'A': 'c', 'B': '4', 'C': 'o', 'D': 'N', 'E': 'q', 'F': '\t', 'G': 'E', 'H': 'O', 'I': 'Z', 'J': ':', 'K': '"', 'L': ' ', 'M': '9', 'N': 'x', 'O': 'i', 'P': 'H', 'Q': 'I', 'R': '/', 'S': 'a', 'T': 'y', 'U': 'z', 'V': 'G', 'W': 'd', 'X': 'v', 'Y': 'K', 'Z': 'X', '0': 'w', ' ': 'g', '1': 'T', '2': ',', '3': 'u', '/': '7', '4': 'P', '5': 't', '\t': 'p', '6': 'k', '\n': '3', '7': 'S', '8': 'n', '9': 'D', '.': '2', ',': 'b', '?': 'm', '!': '5', ':': 'e', '"': '.', "'": 'M', ';': '6'}, {'A': 'a', 'Q': 'b', 'Y': 'c', '1': 'd', 'j': 'e', '8': 'f', 'h': 'g', 'J': 'h', '!': 'i', 'l': 'j', ';': 'k', 'r': 'l', 'L': 'm', 'U': 'n', 'V': 'o', '0': 'p', 'F': 'q', '?': 'r', 's': 's', 'C': 't', 'R': 'u', 'W': 'v', "'": 'w', 'f': 'x', '\n': 'y', 'B': 'z', 'c': 'A', '4': 'B', 'o': 'C', 'N': 'D', 'q': 'E', '\t': 'F', 'E': 'G', 'O': 'H', 'Z': 'I', ':': 'J', '"': 'K', ' ': 'L', '9': 'M', 'x': 'N', 'i': 'O', 'H': 'P', 'I': 'Q', '/': 'R', 'a': 'S', 'y': 'T', 'z': 'U', 'G': 'V', 'd': 'W', 'v': 'X', 'K': 'Y', 'X': 'Z', 'w': '0', 'g': ' ', 'T': '1', ',': '2', 'u': '3', '7': '/', 'P': '4', 't': '5', 'p': '\t', 'k': '6', '3': '\n', 'S': '7', 'n': '8', 'D': '9', '2': '.', 'b': ',', 'm': '?', '5': '!', 'e': ':', '.': '"', 'M': "'", '6': ';'}],
            [{'a': 'y', 'b': 'E', 'c': 'O', 'd': '!', 'e': '1', 'f': 'l', 'g': 'T', 'h': 'Q', 'i': 'R', 'j': '6', 'k': 'i', 'l': '.', 'm': 'a', 'n': 'q', 'o': 'u', 'p': 'V', 'q': '9', 'r': 'h', 's': '0', 't': '?', 'u': ':', 'v': 'W', 'w': 'o', 'x': '"', 'y': 'A', 'z': 'D', 'A': 'Y', 'B': 'k', 'C': '/', 'D': '\t', 'E': '8', 'F': 'F', 'G': '7', 'H': 'L', 'I': 't', 'J': 'c', 'K': 'X', 'L': 'Z', 'M': 'S', 'N': 'f', 'O': ' ', 'P': 'M', 'Q': 'I', 'R': 'b', 'S': '5', 'T': '2', 'U': 'w', 'V': 'r', 'W': 'B', 'X': 's', 'Y': 'p', 'Z': 'N', '0': '3', ' ': 'g', '1': ';', '2': '4', '3': 'd', '/': 'n', '4': 'e', '5': 'H', '\t': "'", '6': 'v', '\n': 'G', '7': 'm', '8': '\n', '9': 'U', '.': 'j', ',': 'K', '?': 'P', '!': 'C', ':': ',', '"': 'z', "'": 'J', ';': 'x'}, {'y': 'a', 'E': 'b', 'O': 'c', '!': 'd', '1': 'e', 'l': 'f', 'T': 'g', 'Q': 'h', 'R': 'i', '6': 'j', 'i': 'k', '.': 'l', 'a': 'm', 'q': 'n', 'u': 'o', 'V': 'p', '9': 'q', 'h': 'r', '0': 's', '?': 't', ':': 'u', 'W': 'v', 'o': 'w', '"': 'x', 'A': 'y', 'D': 'z', 'Y': 'A', 'k': 'B', '/': 'C', '\t': 'D', '8': 'E', 'F': 'F', '7': 'G', 'L': 'H', 't': 'I', 'c': 'J', 'X': 'K', 'Z': 'L', 'S': 'M', 'f': 'N', ' ': 'O', 'M': 'P', 'I': 'Q', 'b': 'R', '5': 'S', '2': 'T', 'w': 'U', 'r': 'V', 'B': 'W', 's': 'X', 'p': 'Y', 'N': 'Z', '3': '0', 'g': ' ', ';': '1', '4': '2', 'd': '3', 'n': '/', 'e': '4', 'H': '5', "'": '\t', 'v': '6', 'G': '\n', 'm': '7', '\n': '8', 'U': '9', 'j': '.', 'K': ',', 'P': '?', 'C': '!', ',': ':', 'z': '"', 'J': "'", 'x': ';'}],
            ]
        self.__plugboards = [
            [{'U': 'R', 'L': 'W', '0': '0', 'i': 'B', ',': 'b', 'S': ':', ':': '6', 'H': 'D', 'e': 'w', 'g': '2', '/': 'o', 'V': 'j', 'A': '3', 's': 'A', 'x': 'Z', 'R': 'L', '!': '!', 'F': ',', 'd': 'G', 'I': 'S', 'f': '7', 'Q': '.', '?': 'F', 'c': 'd', '5': 'g', '2': 'u', 'v': '\t', '\t': 'n', '3': 'I', 'N': '/', 'y': 's', 'o': 'Y', '8': 'k', 'M': 'f', ' ': 'V', 'n': '"', 'l': '8', 'Y': 'O', 'W': 'C', '\n': 'e'}, {'R': 'U', 'W': 'L', '0': '0', 'B': 'i', 'b': ',', ':': 'S', '6': ':', 'D': 'H', 'w': 'e', '2': 'g', 'o': '/', 'j': 'V', '3': 'A', 'A': 's', 'Z': 'x', 'L': 'R', '!': '!', ',': 'F', 'G': 'd', 'S': 'I', '7': 'f', '.': 'Q', 'F': '?', 'd': 'c', 'g': '5', 'u': '2', '\t': 'v', 'n': '\t', 'I': '3', '/': 'N', 's': 'y', 'Y': 'o', 'k': '8', 'f': 'M', 'V': ' ', '"': 'n', '8': 'l', 'O': 'Y', 'C': 'W', 'e': '\n'}],
            [{'h': 'S', 'g': ':', 'H': 'k', 'l': 'E', 'Z': 'N', 'J': 'b', 'T': 'P', 'F': 'y', 'O': 'v', 'C': 'F', 'n': 'O', 'a': '/', 'V': 'e', '!': 's', 'f': '9', 'D': 'Q', '6': 'G', 'x': '8', '8': ';', '\t': 'j', 'z': 'H', 'A': '2', 'w': 'K', 'X': 'A', 'k': '6', ' ': 'd', 's': 'i', 'r': '\t', 'K': 'Y', 'i': 'M', 'U': 'f', 'W': 'g', 'L': '"', '0': 'U', 'c': 'V', 'p': 'B', 'B': 'I', '2': 'D', "'": '1', '4': 'n'}, {'S': 'h', ':': 'g', 'k': 'H', 'E': 'l', 'N': 'Z', 'b': 'J', 'P': 'T', 'y': 'F', 'v': 'O', 'F': 'C', 'O': 'n', '/': 'a', 'e': 'V', 's': '!', '9': 'f', 'Q': 'D', 'G': '6', '8': 'x', ';': '8', 'j': '\t', 'H': 'z', '2': 'A', 'K': 'w', 'A': 'X', '6': 'k', 'd': ' ', 'i': 's', '\t': 'r', 'Y': 'K', 'M': 'i', 'f': 'U', 'g': 'W', '"': 'L', 'U': '0', 'V': 'c', 'B': 'p', 'I': 'B', 'D': '2', '1': "'", 'n': '4'}],
            [{'v': 'r', 'L': 'U', '9': 'z', 'F': '?', '0': '.', ';': ' ', 'Y': 'M', '3': '1', 'T': 'B', 'i': 'R', '4': 'n', '1': 'g', 'G': 'Y', 'b': '4', 'R': 't', 'f': 'b', 'D': 'Z', ',': 'm', 'k': 'W', '"': 'o', 'o': 'E', 'B': 'p', 'A': 'a', 'M': 'I', '5': 'x', 'q': '!', ' ': "'", 'g': '8', 'y': '/', '\n': 'i', '!': '2', 't': 'q', 'm': 'J', 'w': 'j', 'z': 'P', 'P': 'u', 'K': ':', 'N': 'l', 'C': 'S', 'c': 'T'}, {'r': 'v', 'U': 'L', 'z': '9', '?': 'F', '.': '0', ' ': ';', 'M': 'Y', '1': '3', 'B': 'T', 'R': 'i', 'n': '4', 'g': '1', 'Y': 'G', '4': 'b', 't': 'R', 'b': 'f', 'Z': 'D', 'm': ',', 'W': 'k', 'o': '"', 'E': 'o', 'p': 'B', 'a': 'A', 'I': 'M', 'x': '5', '!': 'q', "'": ' ', '8': 'g', '/': 'y', 'i': '\n', '2': '!', 'q': 't', 'J': 'm', 'j': 'w', 'P': 'z', 'u': 'P', ':': 'K', 'l': 'N', 'S': 'C', 'T': 'c'}],
            [{'F': ':', 'k': 'v', 'H': 'J', 'D': 'U', ',': 'B', 'N': 'o', 'P': 'h', 'B': '9', 'J': 'p', '9': '5', 'V': 'k', 'u': 'W', '7': 'j', 'O': '1', 'o': 'G', 'f': 'b', '.': 'M', 'n': 's', 'T': 'T', '"': 'Q', ':': "'", 'l': ' ', 'z': 'X', '3': 'q', 'e': 'l', 'p': 'w', '\n': 'R', '2': 'C', '?': '"', 'b': 'n', '!': 'i', 'x': ';', ' ': 'S', 'r': 'E', 'X': '4', 'h': 'r', '1': 'D', 'W': 'V', 's': '8', 'Q': 't'}, {':': 'F', 'v': 'k', 'J': 'H', 'U': 'D', 'B': ',', 'o': 'N', 'h': 'P', '9': 'B', 'p': 'J', '5': '9', 'k': 'V', 'W': 'u', 'j': '7', '1': 'O', 'G': 'o', 'b': 'f', 'M': '.', 's': 'n', 'T': 'T', 'Q': '"', "'": ':', ' ': 'l', 'X': 'z', 'q': '3', 'l': 'e', 'w': 'p', 'R': '\n', 'C': '2', '"': '?', 'n': 'b', 'i': '!', ';': 'x', 'S': ' ', 'E': 'r', '4': 'X', 'r': 'h', 'D': '1', 'V': 'W', '8': 's', 't': 'Q'}],
            [{'2': '9', 'b': 'y', 'B': 'E', '7': 'X', '\t': 'n', 'K': ',', 'm': '0', '6': 'U', 'V': '5', 'a': 'e', 'I': '!', 'd': '?', 'W': 'i', 'G': '4', ' ': '3', 't': '8', 'Z': 'J', '!': 'P', '"': 'r', 'F': 'N', 'C': 'A', 'J': '\t', 'Q': 's', ',': 'Y', 'O': 'W', 'e': 'M', 'i': ';', '4': 'o', 'q': ' ', ':': 'F', 'o': 'c', 'u': 'V', 'g': 'Q', 'D': 'R', '.': '6', 'l': 'T', 'z': 'a', 'c': 'K', '5': 'z', 'T': 'q'}, {'9': '2', 'y': 'b', 'E': 'B', 'X': '7', 'n': '\t', ',': 'K', '0': 'm', 'U': '6', '5': 'V', 'e': 'a', '!': 'I', '?': 'd', 'i': 'W', '4': 'G', '3': ' ', '8': 't', 'J': 'Z', 'P': '!', 'r': '"', 'N': 'F', 'A': 'C', '\t': 'J', 's': 'Q', 'Y': ',', 'W': 'O', 'M': 'e', ';': 'i', 'o': '4', ' ': 'q', 'F': ':', 'c': 'o', 'V': 'u', 'Q': 'g', 'R': 'D', '6': '.', 'T': 'l', 'a': 'z', 'K': 'c', 'z': '5', 'q': 'T'}],
            [{'6': 'D', '!': 'T', 'f': 's', 'm': 'a', 'j': 'u', 'K': 'A', 'G': 'n', 'E': 'O', 'H': '/', '.': '.', 'B': 'N', '/': '6', '"': ':', '8': 'f', 'h': '\t', 'p': 'e', 'e': 'L', 'T': 'V', 'N': 't', 'O': 'y', 'W': 'W', 'c': 'b', 't': 'r', 'n': '5', 'w': 'F', 'C': '!', 'z': '4', 'U': 'B', '5': 'w', 'b': 'o', '4': '8', 'k': 'P', 'I': 'X', 'X': 'v', 'F': '"', 'S': 'E', ',': 'k', 'A': '\n', '\n': ',', 's': 'K'}, {'D': '6', 'T': '!', 's': 'f', 'a': 'm', 'u': 'j', 'A': 'K', 'n': 'G', 'O': 'E', '/': 'H', '.': '.', 'N': 'B', '6': '/', ':': '"', 'f': '8', '\t': 'h', 'e': 'p', 'L': 'e', 'V': 'T', 't': 'N', 'y': 'O', 'W': 'W', 'b': 'c', 'r': 't', '5': 'n', 'F': 'w', '!': 'C', '4': 'z', 'B': 'U', 'w': '5', 'o': 'b', '8': '4', 'P': 'k', 'X': 'I', 'v': 'X', '"': 'F', 'E': 'S', 'k': ',', '\n': 'A', ',': '\n', 'K': 's'}],
            [{'G': 'V', '7': 'J', 'M': '\n', 'a': 'D', "'": '!', 'd': '/', 'A': 'n', 'w': 's', 'P': 'x', 'n': 'E', '8': "'", 'K': 'y', 'J': 'c', 'c': 'e', 's': 'p', '4': 'u', 'v': 'd', 'u': 'S', 'O': '1', 'q': 'Q', '2': '?', 'l': '8', '9': 't', ':': 'U', 'e': 'k', '3': 'T', 'L': 'H', 'R': 'l', ',': 'z', 'W': 'O', 'Y': 'm', 'g': 'g', ' ': 'M', 'Z': '6', 'S': ',', '0': '\t', 'V': 'G', 'T': 'I', 'f': 'K', 'm': '0'}, {'V': 'G', 'J': '7', '\n': 'M', 'D': 'a', '!': "'", '/': 'd', 'n': 'A', 's': 'w', 'x': 'P', 'E': 'n', "'": '8', 'y': 'K', 'c': 'J', 'e': 'c', 'p': 's', 'u': '4', 'd': 'v', 'S': 'u', '1': 'O', 'Q': 'q', '?': '2', '8': 'l', 't': '9', 'U': ':', 'k': 'e', 'T': '3', 'H': 'L', 'l': 'R', 'z': ',', 'O': 'W', 'm': 'Y', 'g': 'g', 'M': ' ', '6': 'Z', ',': 'S', '\t': '0', 'G': 'V', 'I': 'T', 'K': 'f', '0': 'm'}],
            [{'k': ',', '3': 'I', '!': 'Y', ':': 'V', '.': '1', '4': "'", 'M': 'j', 'z': 'N', 'T': 'J', 'Z': '.', 'J': 'X', '\t': 'i', '2': 'K', '8': 'T', '6': 's', 'U': 'F', 'y': 'e', 'a': 't', 'A': 'U', 'E': 'u', '1': 'B', 'G': 'n', 'V': '"', '/': 'g', 'o': '0', 'B': '7', 's': 'z', 'b': 'q', 'P': 'D', 'F': 'd', 'O': 'Q', 'L': 'p', 'e': ';', 'C': 'L', '\n': 'R', 'X': 'O', ',': '\t', 'c': 'c', 'R': '/', '0': 'S'}, {',': 'k', 'I': '3', 'Y': '!', 'V': ':', '1': '.', "'": '4', 'j': 'M', 'N': 'z', 'J': 'T', '.': 'Z', 'X': 'J', 'i': '\t', 'K': '2', 'T': '8', 's': '6', 'F': 'U', 'e': 'y', 't': 'a', 'U': 'A', 'u': 'E', 'B': '1', 'n': 'G', '"': 'V', 'g': '/', '0': 'o', '7': 'B', 'z': 's', 'q': 'b', 'D': 'P', 'd': 'F', 'Q': 'O', 'p': 'L', ';': 'e', 'L': 'C', 'R': '\n', 'O': 'X', '\t': ',', 'c': 'c', '/': 'R', 'S': '0'}],
            [{'M': 's', 'F': 'm', 'j': 'i', '?': 'l', 'Q': '5', 'Y': "'", '/': '0', 'r': 'x', '0': 'F', 'i': 'L', ';': 'U', 's': '\n', 'X': 'g', 'h': 'H', 'q': 'u', ':': 'R', 'w': 'q', 't': 'V', '7': 'J', '"': '2', '1': 'n', 'm': '8', 'f': '9', '\n': 'b', 'S': 'o', 'z': 'w', 'N': '1', 'L': '4', 'o': '6', 'E': 'O', 'Z': '!', '6': 'd', 'g': 'r', 'U': 'k', 'P': 'N', 'B': ',', 'V': 'Y', 'u': 'S', 'b': 'Z', 'p': 'P'}, {'s': 'M', 'm': 'F', 'i': 'j', 'l': '?', '5': 'Q', "'": 'Y', '0': '/', 'x': 'r', 'F': '0', 'L': 'i', 'U': ';', '\n': 's', 'g': 'X', 'H': 'h', 'u': 'q', 'R': ':', 'q': 'w', 'V': 't', 'J': '7', '2': '"', 'n': '1', '8': 'm', '9': 'f', 'b': '\n', 'o': 'S', 'w': 'z', '1': 'N', '4': 'L', '6': 'o', 'O': 'E', '!': 'Z', 'd': '6', 'r': 'g', 'k': 'U', 'N': 'P', ',': 'B', 'Y': 'V', 'S': 'u', 'Z': 'b', 'P': 'p'}],
            [{'n': 's', 'x': '"', 's': 'G', 'M': 'N', 'q': 'P', 'o': '4', 'k': 'R', '8': '!', 'P': 'Z', 'L': 'B', 'U': 'J', 'y': 'x', 'Q': 'L', 'C': 'e', 'v': 'U', 'e': 'g', ';': 'W', 'h': 'I', '.': '6', 't': ':', '/': 'u', '\t': '9', '9': '?', 'l': '5', ',': '.', '0': '1', "'": 'S', 'I': 'z', 'T': 'C', '1': 'q', 'H': 'H', 'd': 'y', 'Y': 'd', 'Z': 'k', 'B': 'm', 'F': '2', 'z': 'D', '\n': 'Q', 'J': '8', '4': '\t'}, {'s': 'n', '"': 'x', 'G': 's', 'N': 'M', 'P': 'q', '4': 'o', 'R': 'k', '!': '8', 'Z': 'P', 'B': 'L', 'J': 'U', 'x': 'y', 'L': 'Q', 'e': 'C', 'U': 'v', 'g': 'e', 'W': ';', 'I': 'h', '6': '.', ':': 't', 'u': '/', '9': '\t', '?': '9', '5': 'l', '.': ',', '1': '0', 'S': "'", 'z': 'I', 'C': 'T', 'q': '1', 'H': 'H', 'y': 'd', 'd': 'Y', 'k': 'Z', 'm': 'B', '2': 'F', 'D': 'z', 'Q': '\n', '8': 'J', '\t': '4'}],
            ]


        # Order of the rotors and plugboards.
        self.__plugboard_1 = self.__plugboards[plugboards[0]]

        self.__cipher_1 = self.__Rotor(self.__rotors[rotors[0]], offset=offsets[0])
        self.__cipher_2 = self.__Rotor(self.__rotors[rotors[1]], offset=offsets[1])
        self.__cipher_3 = self.__Rotor(self.__rotors[rotors[2]], offset=offsets[2])

        self.__decipher_1 = self.__Rotor(self.__rotors[rotors[2]], offset=offsets[2])
        self.__decipher_2 = self.__Rotor(self.__rotors[rotors[1]], offset=offsets[1])
        self.__decipher_3 = self.__Rotor(self.__rotors[rotors[0]], offset=offsets[0])

        self.__plugboard_2 = self.__plugboards[plugboards[1]]

    def cipher(self, msg:str) -> str:
        '''
        Returns ciphered text.
        '''
        ciphered_msg = ''

        for char in msg:
            char = self.__plugboard_1[char] if char in self.__plugboard_1 else char
            char_index = self.alphabet.index(char)

            ciphered_index, cyle = self.__cipher_1.forward(char_index, rotate=1)
            ciphered_index, cyle = self.__cipher_2.forward(ciphered_index, rotate=cyle)
            ciphered_index, __ = self.__cipher_3.forward(ciphered_index, rotate=cyle)

            char = self.alphabet[ciphered_index]
            char = self.__plugboard_2[char] if char in self.__plugboard_2 else char            
            ciphered_msg += char
        return ciphered_msg

    def decipher(self, msg:str) -> str:
        '''
        Returns deciphered text.
        '''
        deciphered_msg = ''

        for char in msg:
            char = self.__plugboard_2[char] if char in self.__plugboard_2 else char
            char_index = self.alphabet.index(char)

            ciphered_index, cyle = self.__decipher_1.backward(char_index, rotate=1)
            ciphered_index, cyle = self.__decipher_2.backward(ciphered_index, rotate=cyle)
            ciphered_index, __ = self.__decipher_3.backward(ciphered_index, rotate=cyle)

            char = self.alphabet[ciphered_index]
            char = self.__plugboard_1[char] if char in self.__plugboard_1 else char            
            deciphered_msg += char
        return deciphered_msg


if __name__ == '__main__':
    TOP_SECRET_MESSAGE = "0quD'lguAQ U"
    enigma = Enigma()
    TOP_SECRET_MESSAGE = enigma.decipher(TOP_SECRET_MESSAGE)
    print(TOP_SECRET_MESSAGE)
